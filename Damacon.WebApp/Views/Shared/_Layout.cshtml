@using Damacon.DAL.Database.EF;
@using Damacon.DAL.i18n;
@{UserLite user = UserManager.GetLoggedInUser();}

@{
    var culture = System.Threading.Thread.CurrentThread.CurrentUICulture.Name.ToLowerInvariant();
}
@helper selected(string c, string culture)
{
if (c == culture)
{
        @:selected="selected"
    }
}

<!doctype html>
<html class="fixed has-top-menu">
<head>

    <!-- Basic -->
    <meta charset="UTF-8">

    <title>@ViewBag.Title - StoreD</title>

    <!-- Mobile Metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />

    <!-- Web Fonts  -->
    @Styles.Render("~/Content/OpenSans.css")

    <!-- Vendor CSS -->
    @Styles.Render("~/assets/vendor/bootstrap/css/bootstrap.css?v=1.5")
    @Styles.Render("~/assets/vendor/animate/animate.css")

    @Styles.Render("~/assets/vendor/font-awesome/css/font-awesome.css")
    @Styles.Render("~/assets/vendor/magnific-popup/magnific-popup.css")
    @Styles.Render("~/assets/vendor/bootstrap-datepicker/css/bootstrap-datepicker3.css")

    <!-- Specific Page Vendor CSS -->
    @Styles.Render("~/assets/vendor/jquery-ui/jquery-ui.css?v=1.2")
    @Styles.Render("~/assets/vendor/jquery-ui/jquery-ui.theme.css")
    @Styles.Render("~/assets/vendor/bootstrap-multiselect/bootstrap-multiselect.css")
    

    <!-- Theme CSS -->
    @Styles.Render("~/assets/css/theme.css?v=1.3")

    <!-- Skin CSS -->
    @Styles.Render("~/assets/css/skins/default.css")

    <!-- Theme Custom CSS -->
    @Styles.Render("~/assets/css/custom.css")

    @Styles.Render("~/Content/kendo/kendo.common-bootstrap.min.css?v=1.3")
    @Styles.Render("~/Content/kendo/kendo.bootstrap.min.css?v=1.3")

    @if (IsSectionDefined("AdditionalCSS"))
    {
        @RenderSection("AdditionalCSS", required: false)
    }

    <!-- Head Libs -->
    @Scripts.Render("~/assets/vendor/modernizr/modernizr.js")

    <!-- kendo -->
    @Scripts.Render("~/assets/vendor/jquery/jquery.js")
    @*@Scripts.Render("~/bundles/kendo")*@
    @Scripts.Render("~/Scripts/kendo/kendo.all.min.js")
    @Scripts.Render("~/Scripts/kendo/kendo.aspnetmvc.min.js")
    @Scripts.Render("~/Scripts/kendo/kendo.culture.it-IT.min.js?v=1.2")
    @Scripts.Render("~/Scripts/kendo/kendo.culture.en-US.min.js")

    @Scripts.Render("~/assets/vendor/bootstrap-multiselect/bootstrap-multiselect.js")
    @Scripts.Render("~/assets/vendor/magnific-popup/jquery.magnific-popup.js")
    @Scripts.Render("~/Scripts/moment.js")

    <style type="text/css">
        /* Customize the label (the container) */
        .checkBoxContainer {
            display: block;
            position: relative;
            padding-left: 35px;
            margin-bottom: 0px;
            cursor: pointer;
            font-size: 22px;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

            /* Hide the browser's default checkbox */
            .checkBoxContainer input {
                position: absolute;
                opacity: 0;
                cursor: pointer;
            }

        /* Create a custom checkbox */
        .checkmark {
            position: absolute;
            top: 0;
            left: 0;
            height: 25px;
            width: 25px;
            background-color: white;
            border-radius: 0.2rem;
            border-width: 2px;
            border-style: inset;
            border-color: lightgray;
            border-image: initial;
        }

        /* On mouse-over, add a grey background color */
        .checkBoxContainer:hover input ~ .checkmark {
            background-color: white;
        }

        /* When the checkbox is checked, add a blue background */
        .checkBoxContainer input:checked ~ .checkmark {
            background-color: white;
        }

        /* Create the checkmark/indicator (hidden when not checked) */
        .checkmark:after {
            content: "";
            position: absolute;
            display: none;
        }

        /* Show the checkmark when checked */
        .checkBoxContainer input:checked ~ .checkmark:after {
            display: block;
        }

        /* Style the checkmark/indicator */
        .checkBoxContainer .checkmark:after {
            left: 7px;
            top: 3px;
            width: 7px;
            height: 14px;
            border: solid black;
            border-width: 0 2px 2px 0;
            -webkit-transform: rotate(45deg);
            -ms-transform: rotate(45deg);
            transform: rotate(45deg);
        }

        .loading-Area {
            background-color: #cccccc;
            opacity: 0.5;
            z-index: 1000;
            width: 100%;
            height: 100%;
            position: absolute;
        }

        .loading-img {
            position: absolute;
            left: 50%;
            top: 20%;
            margin-left: -32px; /* -1 * image width / 2 */
            display: block;
        }
    </style>
</head>
<body>
    <section class="body">

        <!-- start: header -->
        <header class="header header-nav-menu header-nav-top-line">
            <div class="logo-container">
                <a href="@Url.Action("", "", new { id = UrlParameter.Optional })" class="logo">
                    <img src="~/Assets/Images/Stored Logo.png" width="150" height="55" alt="StoreD" />
                </a>
                <button class="btn header-btn-collapse-nav d-lg-none" data-toggle="collapse" data-target=".header-nav">
                    <i class="fa fa-bars"></i>
                </button>

                <!-- start: header nav menu -->
                <div class="header-nav collapse">
                    <div class="header-nav-main header-nav-main-effect-1 header-nav-main-sub-effect-1 header-nav-main-square">
                        <nav>
                          <ul class="nav nav-pills" id="mainNav">
                            @{var links = user.GetUserApplicationLinksForGroup("Table");}
                            @if (links.Count > 0)
                            {
                              <li class="dropdown">
                                <a class="nav-link dropdown-toggle" href="#">
                                  @Resources.HM_Table
                                </a>
                                <ul class="dropdown-menu">
                                  @foreach (ApplicationLink link in links)
                                  {
                                    <li>
                                      <a class="nav-link" href="@Url.Action(link.LinkAction, link.LinkController, new { id = UrlParameter.Optional })">
                                        @Resources.GetResource(@link.LanguageResourceID)
                                      </a>
                                    </li>
                                  }
                                </ul>
                              </li>
                            }
                            @{links = user.GetUserApplicationLinksForGroup("Store");}
                            @if (links.Count > 0)
                            {
                              <li class="dropdown">
                                <a class="nav-link dropdown-toggle" href="#">
                                  @Resources.HM_Store
                                </a>
                                <ul class="dropdown-menu">
                                  @foreach (ApplicationLink link in links)
                                  {
                                    <li>
                                      <a class="nav-link" href="@Url.Action(link.LinkAction, link.LinkController, new { id = UrlParameter.Optional })">
                                        @Resources.GetResource(@link.LanguageResourceID)
                                      </a>
                                    </li>
                                  }
                                </ul>
                              </li>
                            }
                            @{links = user.GetUserApplicationLinksForGroup("Client");}
                            @if (links.Count > 0)
                            {
                              <li class="dropdown">
                                <a class="nav-link dropdown-toggle" href="#">
                                  @Resources.HM_Clients
                                </a>
                                <ul class="dropdown-menu">
                                  @foreach (ApplicationLink link in links)
                                  {
                                    <li>
                                      <a class="nav-link" href="@Url.Action(link.LinkAction, link.LinkController, new { id = UrlParameter.Optional })">
                                        @Resources.GetResource(@link.LanguageResourceID)
                                      </a>
                                    </li>
                                  }
                                </ul>
                              </li>
                            }
                            @{links = user.GetUserApplicationLinksForGroup("Reports");}
                            @if (links.Count > 0)
                            {
                              <li class="dropdown">
                                <a class="nav-link dropdown-toggle" href="#">
                                  @Resources.HM_Reports
                                </a>
                                <ul class="dropdown-menu">
                                  @foreach (ApplicationLink link in links)
                                  {
                                    <li>
                                      <a class="nav-link" href="@Url.Action(link.LinkAction, link.LinkController, new { id = UrlParameter.Optional })">
                                        @Resources.GetResource(@link.LanguageResourceID)
                                      </a>
                                    </li>
                                  }
                                </ul>
                              </li>
                            }
                            @{links = user.GetUserApplicationLinksForGroup("Administration");}
                            @if (links.Count > 0)
                            {
                              <li class="dropdown">
                                <a class="nav-link dropdown-toggle" href="#">
                                  @Resources.Administration
                                </a>
                                <ul class="dropdown-menu">
                                  @foreach (ApplicationLink link in links)
                                  {
                                    <li>
                                      <a class="nav-link" href="@Url.Action(link.LinkAction, link.LinkController, new { id = UrlParameter.Optional })">
                                        @Resources.GetResource(@link.LanguageResourceID)
                                      </a>
                                    </li>
                                  }
                                </ul>
                              </li>
                            }
                            @{links = user.GetUserApplicationLinksForGroup("Settings");}
                            @if (links.Count > 0)
                            {
                              <li class="dropdown">
                                <a class="nav-link dropdown-toggle" href="#">
                                  @Resources.HM_Settings
                                </a>
                                <ul class="dropdown-menu">
                                  @foreach (ApplicationLink link in links)
                                  {
                                    <li>
                                      <a class="nav-link" href="@Url.Action(link.LinkAction, link.LinkController, new { id = UrlParameter.Optional })">
                                        @Resources.GetResource(@link.LanguageResourceID)
                                      </a>
                                    </li>
                                  }
                                </ul>
                              </li>
                            }
                            @*@{links = user.GetUserApplicationLinksForGroup("About");}*@
                            @*@if (links.Count > 0)*@
                            @*{  *@
                            <li class="dropdown">
                              <a class="nav-link dropdown-toggle" href="#">
                                @Resources.HM_About
                              </a>
                              <ul class="dropdown-menu">
                                <li>
                                  <a class="nav-link" href="/it-IT/About/Version">
                                    @Resources.HM_Version
                                  </a>
                                </li>
                                <li>
                                  <a class="nav-link" href="https://damacon.it/" target="_blank">
                                    @Resources.HM_Damacon_srl
                                  </a>
                                </li>
                                <li>
                                  <a class="nav-link" href="https://damacon.it/download/TeamViewerQS_it.exe">
                                    <img src="https://damacon.it/img/Windows.png" width="30" alt="Accesso e supporto remoto via Internet con TeamViewer" title="Accesso e supporto remoto via Internet con TeamViewer" border="0" height="30">
                                    @Resources.HM_RemoteConnectionWindows
                                  </a>
                                </li>
                                <li>
                                  <a class="nav-link" href="https://damacon.it/download/TeamViewerQS-Mac.app.zip">
                                    <img src="https://damacon.it/img/mac.png" width="30" alt="Accesso e supporto remoto via Internet con TeamViewer" title="Accesso e supporto remoto via Internet con TeamViewer" border="0" height="30">
                                    @Resources.HM_RemoteConnectionMac
                                  </a>
                                </li>
                              </ul>
                            </li>
                            @*}*@
                          </ul>
                            </nav>
                        </div>
                    </div>
                    <!-- end: header nav menu -->
                </div>

                <!-- start: search & user box -->
                <div class="header-right">
                    <div class="userbox">
                        @using (Html.BeginForm("SetCulture", "Home"))
                        {

                            @Html.DropDownList("languageSelection",
                           new SelectList(Cache[UIExtensions.LanguageMetaCacheKey] as IEnumerable<LanguageMeta>, "Culture", "DisplayName", culture),
                           new { @class = "form-control-sm", name = "culture" })
                           <br />
                        }
                    </div>

                    <span class="separator"></span>

                    <div id="userbox" class="userbox">
                        <a href="#" data-toggle="dropdown">
                            @*<figure class="profile-picture">
                                    <img src="" alt="Joseph Doe" class="rounded-circle" />
                                </figure>*@
                            <div class="profile-info" data-lock-name="" data-lock-email="">
                                @if (user != null)
                                {
                                    <span class="name">@user.FirstName @user.Surname</span>
                                    <span class="role">@user.UserType.UserTypeEn</span>
                                }
                            </div>

                            <i class="fa custom-caret"></i>
                        </a>

                        <div class="dropdown-menu">
                            <ul class="list-unstyled">
                                <li class="divider"></li>
                                <li>
                                    <a role="menuitem" tabindex="-1" href="@Url.Action("Logout", "Account", new { id = UrlParameter.Optional })"><i class="fa fa-power-off"></i> Logout</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <!-- end: search & user box -->
            </header>
            <!-- end: header -->

            <div class="inner-wrapper">
                <section role="main" class="content-body">
                    <header class="page-header">
                        <h2>@ViewBag.Title</h2>

                    </header>

                    <!-- start: page -->
                    <div>
                        @RenderBody()
                    </div>
                    <!-- end: page -->
                </section>
            </div>
        </section>

        <!-- Vendor -->
        @Scripts.Render("~/assets/vendor/jquery-browser-mobile/jquery.browser.mobile.js")
        @Scripts.Render("~/assets/vendor/popper/umd/popper.min.js")
        @Scripts.Render("~/assets/vendor/bootstrap/js/bootstrap.js")
        @Scripts.Render("~/assets/vendor/bootstrap-datepicker/js/bootstrap-datepicker.js")
        @Scripts.Render("~/assets/vendor/common/common.js")
        @Scripts.Render("~/assets/vendor/nanoscroller/nanoscroller.js")
        @Scripts.Render("~/assets/vendor/magnific-popup/jquery.magnific-popup.js")
        @Scripts.Render("~/assets/vendor/jquery-placeholder/jquery-placeholder.js")
        @Scripts.Render("~/assets/vendor/bootstrap-maxlength/bootstrap-maxlength.js")
        @Scripts.Render("~/assets/vendor/jquery-maskedinput/jquery.maskedinput.js")


        @*< !--Specific Page Vendor-- >*@
        @Scripts.Render("~/assets/vendor/jquery-ui/jquery-ui.js")
        @Scripts.Render("~/assets/vendor/jqueryui-touch-punch/jqueryui-touch-punch.js")
        @Scripts.Render("~/assets/vendor/jquery-appear/jquery-appear.js")
        @Scripts.Render("~/assets/vendor/bootstrap-multiselect/bootstrap-multiselect.js")

        @*< !--Theme Base, Components and Settings-- >*@
        @Scripts.Render("~/assets/js/theme.js")

        @*< !--Theme Custom-- >*@
        @Scripts.Render("~/assets/js/custom.js")

        @*< !--Theme Initialization Files-- >*@
        @Scripts.Render("~/assets/js/theme.init.js")

        @if (IsSectionDefined("AdditionalJS"))
        {
            @RenderSection("AdditionalJS", required: false)
        }

        @Scripts.Render("~/assets/js/session-timeout.js")

        <script type="text/javascript">
        $('#languageSelection').change(function () {
            var form = $(this).closest("form");
            form.submit();
        });
        </script>

        <script type="text/javascript">
        //set current to the "en-GB" culture script
        @if (culture == "it-it")
        {
            @:kendo.culture('it-IT')
            @:$(document.body).keydown(function (e) {
                @:var $focused = $(':focus');
                @:var isKendoTextBox = $focused.hasClass("text-box");
                @:var isFormTextBox = $focused.hasClass("form-control-sm");
                @:if ((isKendoTextBox == true || isFormTextBox == true) && (e.which == 110)) {
                        @:$focused.val($focused.val() + ',');
                        @:e.preventDefault();}
            @: });
        }
        else {
            @:kendo.culture('en-US');
        }

        </script>

        <script type="text/javascript">

            window.checkSessionIntervalId = setInterval(function() { CheckSession("@Html.Raw(Resources.M_UserSessionExpired)"); }, (@HttpContext.Current.Session.Timeout * 60000) + 5000);

            setUpTimeoutErrorCode("@Html.Raw(Resources.M_UserSessionExpiredWithManualLogout)");
        </script>

    </body>
</html>